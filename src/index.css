/*************************/
/* index
1. Base styles, root, specific selectors like ::selection
2. Pure elements styles
3. Classes styles (cascading - so it overrides the previous base if necessary)
4. Buttons have their own section, following the same pattern
5. Utilities to override the base styles
6. The Background is coded on IconBackgroundStyles.css
/*************************/

/*************************/
/*base layout and styles*/
/*************************/

:root {
	/*colors*/
	/* --white: #cddde8; */
	--white: #dce9f1;
	--black: #1b355a;
	/* --teal: #4da4a6; */
	--teal: #1d8385;
	/* --green: #50bd7d; */
	--green: #148743;
	--red: #cf4a44;
	--red-wrong: rgb(142, 35, 35);
	--transparency: #1b275aaa;
	--more-transparency: #13215f99;
	--shadow: 0 1px 0.5rem 0.1rem rgba(0, 0, 0, 0.2);

	--transition: all 0.18s cubic-bezier(0.77, 0, 0.175, 1);
	--deco: 0.25rem;
	--tiny: 0.5rem;
	--small: 1rem;
	--base: 2rem;
	--large: 5rem;
}

[data-theme="dark"] {
	--red-wrong: rgb(242, 123, 123);
	--white: #1b355a;
	--black: #cddde8;
	--teal: #69c7d8;
	--green: #71e9a3;
	--transparency: #cddde8c1;
	--more-transparency: #cddde89b;
}

::selection {
	background: var(--red);
	color: var(--black);
}

body {
	background: var(--white);
	color: var(--black);
	font: 300 1rem/1.5 "Chivo", Helvetica, sans-serif;
	overflow: hidden;
	text-align: center;
}

main {
	display: grid;
	grid-template-columns:
		minmax(var(--deco), 1fr)
		[content] minmax(auto, calc(60ch + 1vw))
		minmax(var(--deco), 1fr);
	place-items: center;
	height: 99vh;
	margin: var(--small);
	overflow-y: scroll;
	scroll-behavior: smooth;
	scrollbar-width: none;
}

.center {
	grid-column: content;
}

.whole-grid {
	grid-column: span 3;
}

.game-screen {
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	gap: var(--small);
	margin: var(--tiny) 0;
}

/*************************/
/* layout styling */
/*************************/

.customize-container {
	border: var(--teal) solid 1px;
	border-radius: var(--small);
	background: var(--white);
	transition: all 500ms ease;
}

.question-container {
	width: 20%;
	background-color: var(--transparency);
	color: var(--white);
	border-radius: var(--small);
	border: var(--teal) solid 1px;
	transition: var(--transition);
	display: flex;
	flex-direction: column;
}

.button-container {
	padding: var(--tiny) 0;
	margin: var(--tiny);
	border-top: var(--teal) solid 2px;
	display: grid;
	grid-template-columns: repeat(2, minmax(var(--base), 1fr));
	overflow-wrap: break-word;
	hyphens: manual;
}

.check-answers-container {
	width: 20%;
	margin: var(--base) auto auto;
	padding: var(--tiny);
	border-radius: var(--small);
	background-color: var(--red);
	transition: all 500ms ease;
	color: var(--white);
}

[data-theme="dark"] .check-answers-container {
	color: var(--black);
}

.check-answers-container p {
	padding-bottom: var(--deco);
}

[data-theme="dark"] .button-container {
	border-top: var(--red) solid 2px;
}

/*************************/
/*base elements*/
/*************************/

:where(h1, h2, h3, h4, h5, h6) {
	font-family: "Orelega One", sans-serif;
	font-weight: 400;
}

h1 {
	color: var(--teal);
	font-size: calc(2rem + 2vw);
	text-decoration: underline solid var(--deco) var(--black);
}

a {
	color: var(--red);
	text-decoration: dashed underline var(--black);
	text-underline-offset: 0.3em;
	transition: var(--transition);
}

[data-theme="dark"] a {
	color: var(--red-wrong);
}

a:hover {
	color: var(--black);
	letter-spacing: 0.02rem;
}

input {
	display: block;
	box-shadow: var(--shadow);
}

input[type="range"] {
	accent-color: var(--red);
	margin: auto;
	padding: var(--tiny);
}

select {
	display: block;
	box-shadow: var(--shadow);
	margin: var(--deco) auto;
	padding: var(--tiny);
	border-radius: var(--base);
	border: none;
}

select:focus {
	color: var(--red);
	outline: 1px solid var(--red-wrong);
}

hr {
	border: none;
	border-top: var(--teal) solid 1px;
	margin: var(--small) auto;
}
/*************************/
/* class styles */
/*************************/

.subtitle {
	font-size: calc(0.7rem + 0.3vw);
	font-weight: 300;
	text-transform: lowercase;
}

.question {
	font-size: calc(0.9rem + 0.2vw);
	font-weight: 700;
	padding: var(--small);
	background: var(--transparency);
	border-radius: var(--small) var(--small) 0 0;
	height: 50%;
	width: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
}

/*************************/
/*buttons*/
/*************************/

button {
	border: none;
	padding: var(--tiny);
	box-shadow: var(--shadow);
	cursor: pointer;
	transition: var(--transition);
}

.start-button,
.accent-button {
	border-radius: var(--tiny);
	margin: var(--base) auto;
	color: var(--white);
	font-size: calc(1rem + 0.3vw);
	font-weight: 700;
}

.start-button {
	background: var(--red);
}

[data-theme="dark"] .start-button {
	color: var(--black);
}

.accent-button {
	background: var(--teal);
}

.choice-button {
	border-radius: var(--small);
	margin: calc(var(--deco) + 0.2vw) calc(var(--deco) + 0.5vw);
	font-size: calc(0.7rem + 0.2vw);
	font-weight: 700;
	background-color: var(--transparency);
	color: var(--white);
}

:where(.theme-button, .git-button) {
	border-radius: 50%;
	position: fixed;
	z-index: 1;
	display: inline-flex;
	color: var(--black);
	background: var(--teal);
}

.theme-button {
	top: 1rem;
	right: 1rem;
}

.git-button {
	border: none;
	padding: var(--tiny);
	box-shadow: var(--shadow);
	cursor: pointer;
	transition: var(--transition);
	bottom: 1rem;
	left: 1rem;
}

:where(.theme-button, .start-button, .choice-button, .accent-button):hover:enabled,
.git-button:hover {
	background: var(--green);
	transform: translateY(0.1rem);
	box-shadow: var(--shadow), inset var(--shadow);
}

[data-theme="dark"] .start-button:hover:enabled {
	color: var(--white);
}

:where(.theme-button, .start-button, .git-button, .choice-button):active:enabled {
	background: var(--black);
	transform: translateY(0.25rem);
}

button:disabled {
	background-color: var(--transparency);
	color: var(--white);
	border: none;
	cursor: not-allowed;
}

.start-margin {
	margin: var(--tiny) calc(var(--tiny) + 1vw);
}

/*************************/
/*utilities*/
/*************************/

.neg-margin-top {
	margin-top: calc(-0.5rem - 0.5vw);
}

.y-separation {
	margin: calc(var(--deco) + 0.5vw) 0;
}

.flex-center {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
}

/*************************/
/*media queries*/
/*************************/

@media screen and (min-width: 1001px) and (max-width: 1400px) {
	.question-container {
		width: 30%;
	}
}

@media screen and (max-width: 1000px) {
	main {
		height: 95vh;
		overflow-y: scroll;
		scroll-behavior: smooth;
		scrollbar-width: thin;
		scroll-padding: var(--large);
		scrollbar-color: var(--green) var(--transparency);
	}

	.question-container:first-of-type {
		margin-top: var(--small);
	}

	.question-container {
		width: 75%;
	}

	.check-answers-container {
		width: 75%;
	}
}

@media (max-width: 350px) {
	.question-container {
		width: 95%;
	}

	:where(.theme-button, .git-button) {
		position: relative;
		margin: 0 var(--deco);
		top: auto;
		bottom: auto;
		left: auto;
		right: auto;
	}
}

@media screen {
	main {
		scrollbar-width: none;
	}
}
